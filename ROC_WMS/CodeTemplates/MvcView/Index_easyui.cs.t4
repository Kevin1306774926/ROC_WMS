<#@ template language="C#" HostSpecific="True" debug="true" #>
<#@ assembly name="D:\Code\Code lib\roc_wms\ROC_WMS\ROC_WMS\bin\ROC.Models.dll"#>
<#@ import namespace="ROC.Comm"#>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>

@{
    ViewBag.Title = "<#= ViewName#>";
}

<table id="dg"></table>
<div id="dlg" class="easyui-dialog" style="width:500px;height:380px;padding:10px" closed="true" buttons="#dlg-buttons">
    <div class="ftitle">@ViewBag.FormTitle</div>
    <form id="fm" method="post" nvalidate>
<#
    foreach(PropertyMetadata property in ModelMetadata.Properties){        
        if (property.Scaffold && !property.IsReadOnly && !property.IsAssociation) {
			string fieldName=ScaffolderExtends.GetDisplayNameFromAtrribute(ViewDataTypeName,property.PropertyName);
			if(string.IsNullOrEmpty(fieldName))
            {
				fieldName=property.PropertyName;
            }
            // If the property is a primary key and Guid, then the Guid is generated in the controller. Hence, this propery is not displayed on the view.
            if (property.IsPrimaryKey&&property.IsAutoGenerated) {               
#>
         <input name="<#= property.PropertyName#>" hidden />
<#                 
            }
            else if(IsPropertyDateTime(property)){
#>
         <div class="fitem">            
            <label><#= fieldName#>：</label><input name="<#= property.PropertyName#>" class="easyui-datetimebox" required="true" data-options="parser:DatetimeParser" />
         </div>
<#
            }
            else if(IsPropertyBoolean(property)){
#>
        <div class="fitem">
            <label><#= fieldName#>：</label>
            <input name="<#= property.PropertyName#>" type="checkbox" value="true"/>
            <input name="<#= property.PropertyName#>" type="hidden" value="false" />
        </div>
<#
            }
            else{
#>
        <div class="fitem">            
            <label><#= fieldName#>：</label><input name="<#= property.PropertyName#>" class="easyui-textbox" required="true" />
        </div>                

<#        
            }
        }
    }
#>        
    </form>
</div>
<div id="dlg-buttons">
    <a href="javascript:void(0)" class="easyui-linkbutton c6" iconCls="icon-ok" onclick="Save()" style="width:90px">保存</a>
    <a href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-cancel" onclick="javascript:$('#dlg').dialog('close')" style="width:90px">取消</a>
</div>

@section scripts{    
<script type="text/javascript">
    var URL;

    $(function () {
        $('#dg').datagrid(
        {
            url: '/User/List',
            method: 'post',
            singleSelect:true,
            rownumbers: true,
            pagination: true,
            fit: true,
            striped: true,
            showFooter: true,
            sortName: 'Id',
            sortOrder: 'desc',
            columns: [[
<#
    foreach(PropertyMetadata property in ModelMetadata.Properties){
        if (property.Scaffold && !property.IsReadOnly && !property.IsAssociation) {
			string fieldName=ScaffolderExtends.GetDisplayNameFromAtrribute(ViewDataTypeName,property.PropertyName);
			if(string.IsNullOrEmpty(fieldName))
            {
				fieldName=property.PropertyName;
            }
            // If the property is a primary key and Guid, then the Guid is generated in the controller. Hence, this propery is not displayed on the view.
            if (property.IsPrimaryKey&&property.IsAutoGenerated) {               
#>
                { title: '<#= fieldName#>', field: '<#= property.PropertyName#>', width: 80, align: 'center', sortable: true,hidden:true},
<#
            }
            else if(IsPropertyBoolean(property)){
#>
                {
                    title: '<#= fieldName#>', field: '<#= property.PropertyName#>', width: 80, align: 'center',
                    formatter: function (val, row) {
                        return val == true ? '<input  type="checkbox" checked="true" disabled="true"/>' : '<input  type="checkbox" disabled="true"/>';
                    }
                },
<#
            }
            else if(IsPropertyDateTime(property)){
#>
                { title: '<#= fieldName#>', field: '<#= property.PropertyName#>', width: 160,align: 'center',  sortable: true, formatter:DateTimeFormatter},
<#
            }
            else if(IsPropertyString(property))
            {
#>
                { title: '<#= fieldName#>', field: '<#= property.PropertyName#>', width: 120,align: 'left',  sortable: true,},
<#
            }
            else{              
#>
                { title: '<#= fieldName#>', field: '<#= property.PropertyName#>', width: 120,align: 'right',  sortable: true,},
<#
            }
        }
    }
#>

            ]],
             loadFilter:function(data){
                if(data.Data)
                {
                    return data.Data;
                }
                else
                {
                    return data;
                }
            },
            toolbar: [
            {
                id: 'btnreload',
                text: '刷新',
                iconCls: 'icon-reload',
                handler: function () {
                    $('#dg').datagrid('reload');
                }
            },
            {
                id: 'btncreate',
                text: '添加',
                iconCls: 'icon-add',
                handler: function () {
                    $('#btnsave').linkbutton('enable');
                    Create('/User/Create');
                }
            },
            {
                id: 'btnedit',
                text: '修改',
                iconCls: 'icon-edit',
                handler: function () {
                    $('#btnedit').linkbutton('enable');
                    Edit('/User/Edit');
                }
            }, '-',
            {
                id: 'btndetele',
                text: '删除',
                iconCls: 'icon-cancel',
                handler: function () {
                    Delete('/User/Delete');
                }
            }
            ]

        });
    });

    function Create(url) {
        $('#dlg').dialog('open').dialog('setTitle', '添加');
        $('#fm').form('clear');
        URL=url;
    }

    function Edit(url) {
        var row = $('#dg').datagrid('getSelected');
        if(row)
        {
            $('#dlg').dialog('open').dialog('setTitle', '编辑');
            $('#fm').form('load', row);
            URL =url;
        }
    }

    function Delete(url) {
        var row = $('#dg').datagrid('getSelected');
        if (row) {
            $.messager.confirm('警告', '你确定要删除该记录吗？', function (r) {
                if (r) {
                    $.post(url, { id: row.Id }, function (result) {
                        result = eval('(' + result + ')');
                        if (result.Success)
                        {
                            $('#dg').datagrid('reload');                            
                        }
                        else
                        {
                            $.messager.show({
                                title: 'Error',
                                msg: result.Message
                            });
                        }
                    });
                }
            });
        }
    }

    function Save() {
        $('#fm').form('submit', {
            url: URL,
            onSubmit: function () {
                var flag = $(this).form('validate');
                if (flag) {
                    ShowProcess(true, '温馨提示', '正在提交数据...');
                }
                return flag;
            },
            success: function (result) {
                ShowProcess(false);
                var result = eval('(' + result + ')');
                if (result.Success)
                {
                    $('#dlg').dialog('close');
                    $('#dg').datagrid('reload');                            
                }
                else
                {
                    $.messager.show({
                        title: 'Error',
                        msg: result.Message
                    });
                }               
            },
            onLoadError: function () {
                ShowProcess(false);
                $.messager.alert('温馨提示', '由于网络或服务器繁忙，提交失败，请重试!');
            }
        });
    }

</script>    
}
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>